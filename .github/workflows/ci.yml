name: Smart Books API CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ dev, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install flake8 pytest coverage

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests with coverage
      env:
        DJANGO_SETTINGS_MODULE: books_api.settings
        NY_TIMES_API_KEY: ${{ secrets.NY_TIMES_API_KEY || 'dummy_key_for_tests' }}
      run: |
        coverage run --source='books' manage.py test
        coverage report -m

    - name: Check code style with black
      run: |
        pip install black
        black --check books/

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: smart-books-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
